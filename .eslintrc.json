{
  "$schema": "https://json.schemastore.org/eslintrc.json",
  "root": true,
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "unused-imports",
    "import",
    "prettier",
    "simple-import-sort"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "prettier",
    "next/core-web-vitals"
  ],
  "env": {
    "browser": true,
    "node": true,
    "jest": true,
    "es6": true
  },
  "rules": {
    "no-console": ["warn", { "allow": ["debug", "error"] }],
    "no-unused-vars": "off",
    "no-extra-boolean-cast": "warn",
    "no-empty-pattern": "warn",
    "no-useless-escape": "warn",
    "no-use-before-define": [0],
    "curly": "warn",
    "eqeqeq": ["error", "always"],
    "react/jsx-curly-brace-presence": "warn",
    "react/jsx-key": ["warn", { "checkFragmentShorthand": true, "warnOnDuplicates": true }],
    "unused-imports/no-unused-imports": "warn",
    "react/jsx-no-target-blank": ["warn", { "enforceDynamicLinks": "always", "warnOnSpreadAttributes": true }],
    "unused-imports/no-unused-vars": [
      "warn",
      { "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
    ],
    "max-lines": ["warn", 300],
    "import/newline-after-import": ["warn", { "count": 1 }]
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],
      "rules": {
        "simple-import-sort/imports": [
          "warn",
          {
            "groups": [
              // Packages. `react` related packages come first
              ["^react", "^next"],
              // Packages. Things that start with a letter (or digit or underscore).
              ["^@?\\w"],
              // Internal Aliases
              ["^(@/components|@/utils|@/styles)(/.*|$)"],
              // Our own Aliases
              ["^\\/public"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.s?css$"]
            ]
          }
        ]
      }
    },
    {
      "files": "**/*.+(ts|tsx)",
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint/eslint-plugin"],
      "extends": ["plugin:@typescript-eslint/recommended", "prettier"],
      "rules": {
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "no-use-before-define": [0],
        "@typescript-eslint/no-use-before-define": [1],
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": 6,
    "project": ["tsconfig.eslint.json"],
    "sourceType": "module",
    "extraFileExtensions": [".json", ".d.ts"],
    "ecmaFeatures": {
      "legacyDecorators": true,
      "jsx": true,
      "modules": true
    }
  },
  "settings": {
    "react": {
      "version": "18"
    },
    "linkComponents": ["Hyperlink", { "name": "Link", "linkAttribute": "href" }]
  },
  "ignorePatterns": ["node_modules", "next.config.js", "jest.config.js", "coverage", "renderSCSSDTS.js"],
  "parser": "@typescript-eslint/parser"
}
